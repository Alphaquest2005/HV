//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSDataAccessLayer
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using TrackableEntities;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;

    using System;
    using System.Collections.Generic;
    using TrackableEntities.Client;
    
    public partial class PersonLocation : BaseEntity<PersonLocation>
    {
        [DataMember]
                    [Required(ErrorMessage="Id is required")]
    	public int Id
    	{ 
    		get { return _Id; }
    		set
    		{
    			if (Equals(value, _Id)) return;
    			_Id = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _Id;
        [DataMember]
                    [Required(ErrorMessage="PersonId is required")]
    	public int PersonId
    	{ 
    		get { return _PersonId; }
    		set
    		{
    			if (Equals(value, _PersonId)) return;
    			_PersonId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _PersonId;
        [DataMember]
                    [Required(ErrorMessage="LocationTypeId is required")]
    	public int LocationTypeId
    	{ 
    		get { return _LocationTypeId; }
    		set
    		{
    			if (Equals(value, _LocationTypeId)) return;
    			_LocationTypeId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _LocationTypeId;
        [DataMember]
                    [Required(ErrorMessage="Longitude is required")]
    	public double Longitude
    	{ 
    		get { return _Longitude; }
    		set
    		{
    			if (Equals(value, _Longitude)) return;
    			_Longitude = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private double _Longitude;
        [DataMember]
                    [Required(ErrorMessage="Latitude is required")]
    	public double Latitude
    	{ 
    		get { return _Latitude; }
    		set
    		{
    			if (Equals(value, _Latitude)) return;
    			_Latitude = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private double _Latitude;
        [DataMember]
    	public LocationType LocationType
    	{
    		get { return _LocationType; }
    		set
    		{
    			if (Equals(value, _LocationType)) return;
    			_LocationType = value;
    			LocationTypeChangeTracker = _LocationType == null ? null
    				: new ChangeTrackingCollection<LocationType> { _LocationType };
    			NotifyPropertyChanged();
    		}
    	}
    	private LocationType _LocationType;
    	private ChangeTrackingCollection<LocationType> LocationTypeChangeTracker { get; set; }
        [DataMember]
    	public Person Person
    	{
    		get { return _Person; }
    		set
    		{
    			if (Equals(value, _Person)) return;
    			_Person = value;
    			PersonChangeTracker = _Person == null ? null
    				: new ChangeTrackingCollection<Person> { _Person };
    			NotifyPropertyChanged();
    		}
    	}
    	private Person _Person;
    	private ChangeTrackingCollection<Person> PersonChangeTracker { get; set; }
    }
}
