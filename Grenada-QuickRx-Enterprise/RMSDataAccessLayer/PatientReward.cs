//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSDataAccessLayer
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using TrackableEntities;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;

    using System;
    using System.Collections.Generic;
    using TrackableEntities.Client;
    
    public partial class PatientReward : BaseEntity<PatientReward>
    {
        [DataMember]
                    [Required(ErrorMessage="Id is required")]
    	public int Id
    	{ 
    		get { return _Id; }
    		set
    		{
    			if (Equals(value, _Id)) return;
    			_Id = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _Id;
        [DataMember]
                    [Required(ErrorMessage="PatientId is required")]
    	public int PatientId
    	{ 
    		get { return _PatientId; }
    		set
    		{
    			if (Equals(value, _PatientId)) return;
    			_PatientId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _PatientId;
        [DataMember]
                    [Required(ErrorMessage="RewardId is required")]
    	public int RewardId
    	{ 
    		get { return _RewardId; }
    		set
    		{
    			if (Equals(value, _RewardId)) return;
    			_RewardId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _RewardId;
        [DataMember]
                    [Required(ErrorMessage="DateIssued is required")]
    	public System.DateTime DateIssued
    	{ 
    		get { return _DateIssued; }
    		set
    		{
    			if (Equals(value, _DateIssued)) return;
    			_DateIssued = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private System.DateTime _DateIssued;
        [DataMember]
                    [StringLength(50)]
    	public string StoreName
    	{ 
    		get { return _StoreName; }
    		set
    		{
    			if (Equals(value, _StoreName)) return;
    			_StoreName = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _StoreName;
        [DataMember]
        	public Nullable<int> ItemNumber
    	{ 
    		get { return _ItemNumber; }
    		set
    		{
    			if (Equals(value, _ItemNumber)) return;
    			_ItemNumber = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private Nullable<int> _ItemNumber;
        [DataMember]
    	public Patient Persons_Patient
    	{
    		get { return _Persons_Patient; }
    		set
    		{
    			if (Equals(value, _Persons_Patient)) return;
    			_Persons_Patient = value;
    			Persons_PatientChangeTracker = _Persons_Patient == null ? null
    				: new ChangeTrackingCollection<Patient> { _Persons_Patient };
    			NotifyPropertyChanged();
    		}
    	}
    	private Patient _Persons_Patient;
    	private ChangeTrackingCollection<Patient> Persons_PatientChangeTracker { get; set; }
        [DataMember]
    	public PatientRewardSale PatientRewardSale
    	{
    		get { return _PatientRewardSale; }
    		set
    		{
    			if (Equals(value, _PatientRewardSale)) return;
    			_PatientRewardSale = value;
    			PatientRewardSaleChangeTracker = _PatientRewardSale == null ? null
    				: new ChangeTrackingCollection<PatientRewardSale> { _PatientRewardSale };
    			NotifyPropertyChanged();
    		}
    	}
    	private PatientRewardSale _PatientRewardSale;
    	private ChangeTrackingCollection<PatientRewardSale> PatientRewardSaleChangeTracker { get; set; }
    }
}
