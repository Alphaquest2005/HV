//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSDataAccessLayer
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using TrackableEntities;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;

    using System;
    using System.Collections.Generic;
    using TrackableEntities.Client;
    
    public partial class PrescriptionImage : BaseEntity<PrescriptionImage>
    {
        [DataMember]
                    [Required(ErrorMessage="TransactionId is required")]
    	public int TransactionId
    	{ 
    		get { return _TransactionId; }
    		set
    		{
    			if (Equals(value, _TransactionId)) return;
    			_TransactionId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _TransactionId;
        [DataMember]
        	public byte[] Image
    	{ 
    		get { return _Image; }
    		set
    		{
    			if (Equals(value, _Image)) return;
    			_Image = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private byte[] _Image;
        [DataMember]
                    [Required(ErrorMessage="Path is required")]
                [StringLength(255)]
    	public string Path
    	{ 
    		get { return _Path; }
    		set
    		{
    			if (Equals(value, _Path)) return;
    			_Path = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _Path;
        [DataMember]
    	public Prescription TransactionBase_Prescription
    	{
    		get { return _TransactionBase_Prescription; }
    		set
    		{
    			if (Equals(value, _TransactionBase_Prescription)) return;
    			_TransactionBase_Prescription = value;
    			TransactionBase_PrescriptionChangeTracker = _TransactionBase_Prescription == null ? null
    				: new ChangeTrackingCollection<Prescription> { _TransactionBase_Prescription };
    			NotifyPropertyChanged();
    		}
    	}
    	private Prescription _TransactionBase_Prescription;
    	private ChangeTrackingCollection<Prescription> TransactionBase_PrescriptionChangeTracker { get; set; }
    }
}
