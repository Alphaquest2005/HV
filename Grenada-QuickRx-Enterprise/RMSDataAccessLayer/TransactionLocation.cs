//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSDataAccessLayer
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using TrackableEntities;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;

    using System;
    using System.Collections.Generic;
    using TrackableEntities.Client;
    
    public partial class TransactionLocation : BaseEntity<TransactionLocation>
    {
        [DataMember]
                    [Required(ErrorMessage="TransactionId is required")]
    	public int TransactionId
    	{ 
    		get { return _TransactionId; }
    		set
    		{
    			if (Equals(value, _TransactionId)) return;
    			_TransactionId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _TransactionId;
        [DataMember]
                    [Required(ErrorMessage="Longitude is required")]
    	public double Longitude
    	{ 
    		get { return _Longitude; }
    		set
    		{
    			if (Equals(value, _Longitude)) return;
    			_Longitude = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private double _Longitude;
        [DataMember]
                    [Required(ErrorMessage="Latitude is required")]
    	public double Latitude
    	{ 
    		get { return _Latitude; }
    		set
    		{
    			if (Equals(value, _Latitude)) return;
    			_Latitude = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private double _Latitude;
        [DataMember]
    	public TransactionBase TransactionBase
    	{
    		get { return _TransactionBase; }
    		set
    		{
    			if (Equals(value, _TransactionBase)) return;
    			_TransactionBase = value;
    			TransactionBaseChangeTracker = _TransactionBase == null ? null
    				: new ChangeTrackingCollection<TransactionBase> { _TransactionBase };
    			NotifyPropertyChanged();
    		}
    	}
    	private TransactionBase _TransactionBase;
    	private ChangeTrackingCollection<TransactionBase> TransactionBaseChangeTracker { get; set; }
    }
}
